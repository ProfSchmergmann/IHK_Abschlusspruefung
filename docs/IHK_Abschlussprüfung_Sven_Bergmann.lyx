#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage{csquotes}
\end_preamble
\options numbers=noendperiod
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package babel
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Abschlussprüfung Sommer 2022 - Entwicklung eines Softwaresystems"
\pdf_author "Sven Bergmann"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblatex_bibstyle authoryear
\biblatex_citestyle authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\small\ttfamily},columns=flexible,breaklines=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage} % Suppresses headers and footers on the title page 	
\end_layout

\begin_layout Plain Layout

	
\backslash
centering % Centre everything on the title page  	
\end_layout

\begin_layout Plain Layout

	
\backslash
scshape % Use small caps for all text on the title page  	
\end_layout

\begin_layout Plain Layout

	
\backslash
vspace*{
\backslash
baselineskip} % White space at the top of the page 
\end_layout

\begin_layout Plain Layout

	
\backslash
rule{
\backslash
textwidth}{1.6pt}
\backslash
vspace*{-
\backslash
baselineskip}
\backslash
vspace*{2pt} % Thick horizontal rule
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
vspace{2
\backslash
baselineskip} % Whitespace above the title 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	{
\backslash
LARGE Abschlussprüfung Sommer 2022
\backslash

\backslash
 Entwicklung eines Softwaresystems
\backslash

\backslash
} % Title 
\end_layout

\begin_layout Plain Layout

	
\backslash
vspace{2
\backslash
baselineskip} % Whitespace below the title
\end_layout

\begin_layout Plain Layout

	
\backslash
rule{
\backslash
textwidth}{1.6pt}
\backslash
vspace*{-
\backslash
baselineskip}
\backslash
vspace*{2pt} % Thick horizontal rule
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
vspace*{25
\backslash
baselineskip} % Whitespace after the title block  	
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{flushleft} 	
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{tabular}{ll} 		
\end_layout

\begin_layout Plain Layout

			Vorgelegt von: & Sven Bergmann 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			Vorgelegt am: & 
\backslash
today 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			Prüfungsnummer: & 123456789 
\backslash

\backslash
 		
\end_layout

\begin_layout Plain Layout

			Ausbildungsbetrieb: & CAE GmbH 	
\end_layout

\begin_layout Plain Layout

		
\backslash
end{tabular} 	
\end_layout

\begin_layout Plain Layout

	
\backslash
end{flushleft} 
\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Aufgabenbeschreibung
\end_layout

\begin_layout Section
Objektorientierter Entwurf
\end_layout

\begin_layout Subsection
Klassendiagramme
\end_layout

\begin_layout Subsection
Pakete
\end_layout

\begin_layout Subsubsection
Utils
\end_layout

\begin_layout Standard
Das Paket 
\begin_inset Quotes gld
\end_inset

com.cae.de.utils
\begin_inset Quotes grd
\end_inset

 beinhaltet weitere Pakete, welche Klassen beinhalten, die in irgendeiner
 Art zum Oberbegriff 
\begin_inset Quotes gld
\end_inset

Utilities
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset

Werkzeuge
\begin_inset Quotes grd
\end_inset

 gehören.
\end_layout

\begin_layout Paragraph
IO
\end_layout

\begin_layout Standard
Wie der Name schon sagt, ist dies das Paket für die Ein- und Ausgabe von
 Daten.
 Es existieren vor allem die Interfaces 
\begin_inset Quotes gld
\end_inset

Reader
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

Writer
\begin_inset Quotes grd
\end_inset

, welche beide generisch geschrieben sind, sodass in den implementierenden
 Klassen angegeben werden kann, welche Objekte eingelesen oder geschrieben
 werden.
 
\end_layout

\begin_layout Paragraph
Algorithms
\end_layout

\begin_layout Standard
Das Paket Algorithms ist auch selbstsprechend und behinhaltet Klassen, welche
 bekannte Algorithmen implementieren.
\end_layout

\begin_layout Paragraph
LogOption
\end_layout

\begin_layout Standard
Die Klasse LogOption wird in der Main Methode genutzt um die Option für
 das Logging festlegen zu können.
 Der Nutzer hat dabei die Möglichkeit die Logging Ausgabe zu modifizieren.
\end_layout

\begin_layout Subsubsection
Models
\end_layout

\begin_layout Section
Änderungen zur schriftlichen Ausarbeitung
\end_layout

\begin_layout Subsection
Umbenennungen
\end_layout

\begin_layout Subsection
Modifikation der Klassenstruktur
\end_layout

\begin_layout Subsection
Modifikation der Logik
\end_layout

\begin_layout Section
Benutzeranleitung
\end_layout

\begin_layout Subsection
Ordnerstruktur
\end_layout

\begin_layout Standard
An sich sollten die fertig gebaute 
\begin_inset Quotes gld
\end_inset

.jar
\begin_inset Quotes grd
\end_inset

 Datei zusammen mit dem ausführbaren Python Skript in einem Ordner liegen.
 Die Testbeispiele sollten ebenfalls auf der gleichen Ebene in einem Ordner
 vorhanden sein, wobei der Ordnername in beim Programmstart oder in dem
 Skript angegeben werden kann.
 Der Ordner für alle Ausgabe Dateien wird dann ebenso in dieser Ebene erstellt.
 
\end_layout

\begin_layout Subsection
Benötigte Programme
\end_layout

\begin_layout Standard
Für die Ausführung der 
\begin_inset Quotes gld
\end_inset

.jar
\begin_inset Quotes grd
\end_inset

 Datei benötigt der Zielrechner zwingend eine Installation des Open JDK
 17
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.oracle.com/java/technologies/downloads/#java17
\end_layout

\end_inset


\end_layout

\end_inset

, da das Java-Sprachlevel auf 17 gesetzt wurde.
 Um das Python Skript auszuführen wird eine Python Installation gebraucht,
 wobei ich die Version 3.10
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.python.org/downloads/release/python-3100/
\end_layout

\end_inset


\end_layout

\end_inset

 benutzt habe.
 Um das Projekt zu bauen, wird 
\begin_inset Quotes gld
\end_inset

gradle
\begin_inset Quotes grd
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gradle.org/
\end_layout

\end_inset


\end_layout

\end_inset

 genutzt.
\end_layout

\begin_layout Subsection
Ausführen als Kommandozeilenprogramm
\end_layout

\begin_layout Standard
Es gibt zwei Wege das Programm auszuführen, einmal direkt über Java und
 einmal über das Python Skript, welches intern die 
\begin_inset Quotes gld
\end_inset

.jar
\begin_inset Quotes grd
\end_inset

 Datei aufruft.
\end_layout

\begin_layout Standard
Das Programm nimmt Argumente entgegen, welche sind:
\end_layout

\begin_layout Itemize
-inputfolder {
\begin_inset Quotes gld
\end_inset

Name des Ordners mit den Eingabedateien
\begin_inset Quotes grd
\end_inset

}
\end_layout

\begin_layout Itemize
-outputfolder {
\begin_inset Quotes gld
\end_inset

Name des Ordners, wohin die Ausgabedateien geschrieben werden
\begin_inset Quotes grd
\end_inset

}
\end_layout

\begin_layout Itemize
-log {
\begin_inset Quotes gld
\end_inset

true
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset

false
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset

file
\begin_inset Quotes grd
\end_inset

}
\end_layout

\begin_layout Standard
Die Namen der Ordner werden immer relativ zum derzeitigen Ordnerpfad ausgewertet.
 Ohne den Parameter 
\begin_inset Quotes gld
\end_inset

-inputfolder
\begin_inset Quotes grd
\end_inset

 wird das Programm den Ordner 
\begin_inset Quotes gld
\end_inset

input
\begin_inset Quotes grd
\end_inset

 auf der gleichen Ebene suchen und wenn dieser vorhanden ist, das Programm
 ausführen, ansonsten das Programm direkt beenden.
 Der Parameter 
\begin_inset Quotes gld
\end_inset

-outputfolder
\begin_inset Quotes grd
\end_inset

 muss nicht zwingend angegeben werden, da ohne diese Angabe alle Ausgabedaten
 in den Ordner 
\begin_inset Quotes gld
\end_inset

output
\begin_inset Quotes grd
\end_inset

 geschrieben werden.
 Die Option 
\begin_inset Quotes gld
\end_inset

-log
\begin_inset Quotes grd
\end_inset

 gibt an, ob der Benutzer Loggingausgaben in der Kommandozeile haben möchte
 oder nicht, der default Wert hierfür ist 
\begin_inset Quotes gld
\end_inset

true
\begin_inset Quotes grd
\end_inset

, also ein Loggingoutput in der Konsole.
 Falls die Option 
\begin_inset Quotes gld
\end_inset

file
\begin_inset Quotes grd
\end_inset

 angeben wurde, werden alle Logs in eine Datei 
\begin_inset Quotes gld
\end_inset

log.txt
\begin_inset Quotes grd
\end_inset

 auf der gleichen Ebene geschrieben.
 
\end_layout

\begin_layout Subsubsection
Ausführen der JAR
\end_layout

\begin_layout Standard
Um die 
\begin_inset Quotes gld
\end_inset

.jar
\begin_inset Quotes grd
\end_inset

 ausführen zu können, muss zumindest unter Windows der Pfad zum JDK 17 in
 den Umgebungsvariablen gesetzt sein.
 Mit einem Doppelklick auf die Datei wird der Code mit Standardargumenten
 ausgeführt.
 Ansonsten könnte der Benutzer auch über die Kommandozeile gehen und die
 Programmargumente selbst setzen.
 Das würde dann beispielsweise so aussehen: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

	java -jar IHK_Abschlusspruefung.jar -inputfolder input -outputfolder output
 -log false
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Ausführen des Python-Skripts
\end_layout

\begin_layout Standard
Der Benutzer kann zusätzlich auch noch das Python-Skript 
\begin_inset Quotes gld
\end_inset

execute_gro_pro.py
\begin_inset Quotes grd
\end_inset

 ausführen, um das Program mit den Standardargumenten zu starten.
 Hierfür ist eine Installation von Python notwendig, sowie die Verlinkung
 zur Umgebungsvariablen.
 Der Kommandozeilencode sieht dann beispielsweise so aus:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

	python execute_gro_pro.py
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Beschreibung, Begründung und Diskussion ausgewählter Beispiele
\end_layout

\begin_layout Subsection
Black-Box-Test
\end_layout

\begin_layout Subsubsection
Äquivalenzklassen
\end_layout

\begin_layout Subsection
White-Box-Test
\end_layout

\begin_layout Subsubsection
Kontrollflussgraphen
\end_layout

\begin_layout Section
Zusammenfassung und Ausblick
\end_layout

\begin_layout Section
\start_of_appendix
UML-Diagramme
\end_layout

\begin_layout Subsection
Klassendiagramme
\end_layout

\begin_layout Subsection
Sequenzdiagramme
\end_layout

\begin_layout Subsection
Aktivitätsdiagramme
\end_layout

\begin_layout Section
Eigenständigkeitserklärung
\end_layout

\end_body
\end_document
